/* Variables */

$button-color: $grey-darker !default;
$button-background-color: $white !default;
$button-border-color: $grey-lighter !default;

$button-hover-color: $link-hover !default;
$button-hover-border-color: $link-hover-border !default;

$button-focus-color: $link-focus !default;
$button-focus-border-color: $link-focus-border !default;
$button-focus-box-shadow-size: 0 0 0 0.125em !default;
$button-focus-box-shadow-color: rgba($primary, 0.25) !default;

$button-active-color: $link-active !default;
$button-active-border-color: $link-active-border !default;

$button-text-color: $text !default;
$button-text-hover-background-color: $background !default;
$button-text-hover-color: $text-strong !default;

$button-disabled-background-color: $white !default;
$button-disabled-border-color: $grey-lighter !default;
$button-disabled-shadow: none !default;
$button-disabled-opacity: 0.5 !default;

$button-colors: ("primary": ($white, $white, $primary, $link-active, $grey-light, transparent, transparent), "secondary": ($primary, $grey-light, $white, rgba($primary,.1), $white, $primary, $grey-lighter)) !default;

/* Size mixins */
@mixin button-small {
  border-radius: $radius-small;
  font-size: $size-small;
  height: 1.875rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.button {
  @include control;
  @include unselectable;
  background-color: $button-background-color;
  border-color: $button-border-color;
  color: $button-color;
  cursor: pointer;
  justify-content: center;
  padding-left: 1.125rem;
  padding-right: 1.125rem;
  height: 2.75rem;
  text-align: center;
  font-size: $size-medium;
  white-space: nowrap;

  .icon {
    &,
    &.is-small {
      height: 1.5em;
      width: 1.5em;
    }

    &:first-child:not(:last-child) {
      margin-left: calc(-0.375em - 1px);
      margin-right: 0.1875em;
    }

    &:last-child:not(:first-child) {
      margin-left: 0.1875em;
      margin-right: calc(-0.375em - 1px);
    }

    &:first-child:last-child {
      margin-left: calc(-0.375em - 1px);
      margin-right: calc(-0.375em - 1px);
    }
  }

  /* States */
  &:hover,
  &.is-hovered {
    border-color: $button-hover-border-color;
    color: $button-hover-color;
  }

  &:focus,
  &.is-focused {
    border-color: $button-focus-border-color;
    color: $button-focus-color;
    &:not(:active) {
      box-shadow: $button-focus-box-shadow-size $button-focus-box-shadow-color;
    }
  }

  &:active,
  &.is-active {
    border-color: $button-active-border-color;
    color: $button-active-color;
  }

  /* Colors */

  @each $name, $dict in $button-colors {
    $color: nth($dict, 1);
    $color-disable: nth($dict, 2);
    $background-color: nth($dict, 3);
    $background-color-active: nth($dict, 4);
    $background-color-disable: nth($dict, 5);
    $border-color: nth($dict, 6);
    $border-color-disable: nth($dict, 7);

    &.is-#{$name} {
      background-color: $background-color;
      border-color: $border-color;
      color: $color;

      &:hover,
      &.is-hovered {
        background-color: darken($background-color, 3%);
        border-color: $border-color;
        color: $color;
      }

      &:focus,
      &.is-focused {
        border-color: $border-color;
        color: $color;
        &:not(:active) {
          box-shadow: $button-focus-box-shadow-size rgba($color, 0.25);
        }
      }

      &:active,
      &.is-active {
        background-color: $background-color-active;
        border-color: $border-color;
        color: $color;
      }

      &[disabled] {
        background-color: $background-color-disable;
        border-color: $border-color-disable;
        color: $color-disable;
        box-shadow: none;
      }

      &.is-loading {
        &:after {
          border-color: transparent transparent $color $color !important;
        }
      }
    }
  }

  /* Sizes */
  &.is-small {
    @include button-small;
  }

  /* Modifiers */
  &[disabled] {
    background-color: $button-disabled-background-color;
    border-color: $button-disabled-border-color;
    box-shadow: $button-disabled-shadow;
    opacity: $button-disabled-opacity;
  }

  &.is-fullwidth {
    display: flex;
    width: 100%;
  }

  &.is-loading {
    color: transparent !important;
    pointer-events: none;
    &:after {
      @include loader;
      @include center(1em);
      position: absolute !important;
    }
  }
}
